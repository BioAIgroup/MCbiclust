% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ForkClassifier.R
\name{ForkClassifier}
\alias{ForkClassifier}
\title{Classification of fork status}
\usage{
ForkClassifier(pc1, samp.num)
}
\arguments{
\item{pc1}{PC1 values of samples}

\item{samp.num}{Number of samples in the bicluster}
}
\value{
Classification of each sample
}
\description{
Classification of fork status
}
\examples{
data(CCLE_small)
data(Mitochondrial_genes)

mito.loc <- which(row.names(CCLE_small) \%in\% Mitochondrial_genes)
CCLE.mito <- CCLE_small[mito.loc,]

set.seed(102)
CCLE.seed <- FindSeed(gem = CCLE.mito,
                      seed.size = 10,
                      iterations = 100,
                      messages = 1000)

CCLE.sort <- SampleSort(gem = CCLE.mito,seed = CCLE.seed,sort.length = 11)

# Full ordering can be loaded here:
data("Vignette_sort")
CCLE.samp.sort <- Vignette_sort[[1]]

CCLE.pc1 <- PC1VecFun(top.gem = CCLE.mito,
                      seed.sort = CCLE.samp.sort,
                      n = 10)

CCLE.cor.vec <-  CVEval(gem.part = CCLE.mito,
                            gem.all = CCLE_small,
                            seed = CCLE.seed,
                            splits = 10)

CCLE.bic <- ThresholdBic(cor.vec = CCLE.cor.vec,sort.order = CCLE.samp.sort,
                         pc1 = as.numeric(CCLE.pc1))

CCLE.pc1 <- PC1Align(gem = CCLE_small, PC1 = CCLE.pc1,
                     CV = CCLE.cor.vec ,
                     sort.order = CCLE.samp.sort,
                     bic =CCLE.bic)

CCLE.fork <- ForkClassifier(CCLE.pc1, samp.num = length(CCLE.bic[[2]]))

}

